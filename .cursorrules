{
  "name": "byDefault",
  "description": "A Python application with command line tools for Splunk 9.2.2 developers using UV for package and venv management, Ruff for linting and formatting, and tested with pytest.",
  "rules": [
    {
      "context": "Python CLI Development",
      "instructions": [
        "Use UV for package and venv management. Ensure package requirements and dependencies are defined in a way that supports UV.",
        "Utilize Ruff for linting and formatting. Follow PEP 8 style guidelines for Python code.",
        "Include comprehensive docstrings for all functions and classes to assure maintainability and understanding.",
        "Testing should be exclusively with pytest. Do not require unittests.",
        "Security, clarity, and maintainability must be prioritized across all development activities."
      ]
    },
    {
      "context": "Terminal Commands",
      "instructions": [
        "Always provide terminal commands in a copy-pasteable format using && for command chaining",
        "Git commands should be provided as a single line that can be directly copied to terminal",
        "Git commit messages should follow the format:",
        "  - First line: type: brief description",
        "  - Blank line",
        "  - Bullet points starting with - for detailed changes",
        "  - Optional context or rationale after bullet points",
        "Include comments above complex commands explaining their purpose",
        "For destructive operations, include a warning comment above the command"
      ]
    },
    {
      "context": "Markdown and Documentation",
      "instructions": [
        "Ensure README.md is in GitHub flavored markdown and is structured to avoid breaking Cursor's functionality, especially with codeblocks.",
        "Include clear usage instructions and examples for the CLI tools.",
        "Document all major classes and functions using docstrings."
      ]
    },
    {
      "context": "CI/CD and Deployment",
      "instructions": [
        "Implement CI/CD pipelines using GitHub Actions.",
        "Ensure the project is set up for packaging and distribution as a UV tool.",
        "Deploy the package in a private enterprise GitHub repository."
      ]
    },
    {
      "context": "Python Documentation",
      "instructions": [
        "All functions and classes must have comprehensive docstrings that:",
        "  - Describe the purpose and behavior",
        "  - Document all parameters using Args section",
        "  - Document return values using Returns section",
        "  - List all raised exceptions using Raises section",
        "  - Include usage examples for complex functionality",
        "When updating code:",
        "  - Never remove existing docstrings",
        "  - Update docstrings to reflect any changes in functionality",
        "  - Add implementation details for Python version-specific features",
        "  - Document any performance considerations or optimizations"
      ]
    },
    {
      "context": "Python Development Tools",
      "instructions": [
        "Use Ruff exclusively for:",
        "  - Code formatting",
        "  - Import sorting",
        "  - Code linting",
        "  - Style enforcement",
        "Do not use or recommend:",
        "  - Pylance for linting",
        "  - Black for formatting",
        "  - isort for imports",
        "  - flake8 or pylint"
      ]
    },
    {
      "context": "Git Operations",
      "instructions": [
        "When amending commits:",
        "  - Use git add for specific files",
        "  - Use --amend to modify the last commit",
        "  - Keep the original commit message format",
        "  - Include warning about amending pushed commits",
        "Example:",
        "  git add specific/files && git commit --amend -m \"type: description",
        "",
        "  - Bullet points",
        "  - More points",
        "",
        "  Context here\""
      ]
    },
    {
      "context": "Development Notes",
      "instructions": [
        "DEVNOTES.md should include:",
        "  - Current state and recently completed work",
        "  - Next steps with implementation details",
        "  - Context for next development session",
        "  - Files of interest with brief descriptions",
        "  - Recent commits in chronological order",
        "  - Technical notes and considerations",
        "Format sections as:",
        "  ## Current State",
        "    ### Recently Completed",
        "    - List with details",
        "  ## Next Steps",
        "    - Prioritized tasks with considerations",
        "  ## Context for Next Session",
        "    - Key points for resuming work",
        "  ## Files of Interest",
        "    - Relevant files with descriptions",
        "  ## Recent Commits",
        "    - Last few commits in order",
        "  ## Notes",
        "    - Technical considerations"
      ]
    }
  ]
}